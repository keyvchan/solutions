* Word Break

** DP caching up to buttom

*** Algorithm
    Draw a decision tree, caching the results of each decision.
    Starting from `s[0]`, check if all words start with `s[0]`, can be used to break.

    Caching the `(last_index, word)`

*** Complexity
    Time: O(n)
    Space: O(n)

*** Result
    - Runtime: 3 ms, faster than 47.82% of Go online submissions for Word Break.
    - Memory Usage: 2.9 MB, less than 8.18% of Go online submissions for Word Break.

*** Code
    - Go: {@ main.go}


