* Insert Interval

** Edge Cases
   - The new interval have three cases:
   -- The new interval is before the old one
   -- The new interval is after the old one
   -- The new interval is inside the old one
   - The original intervals is sorted and non-overlapping

** One Pass

*** Algorithm
    ~ If new interval is before current one, insert new interval and return
    ~ If new interval is after current one, insert current interval and continue
    ~ Otherwise, new interval should be inside and overlap with current one, so update new interval

*** Complexity
    ~ Time: O(n)
    ~ Space: O(1)

*** Result
    - Runtime: 8 ms, faster than 75.58% of Go online submissions for Insert Interval.
    - Memory Usage: 4.7 MB, less than 42.63% of Go online submissions for Insert Interval.
*** Code
    - Go: {@ main.go}

