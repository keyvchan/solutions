* Find a Peak Element

** Note:
   - `nums[i] != nums[i+1]`

** Linear Search, Not Very Efficient

*** Algorithm
    Check every element in the array, `num[i] > num[i+1] ` and `num[i] > num[i-1]`

*** Complexity
    - Time: O(n)
    - Space: O(1)

*** Result
    - Runtime: 0 ms, faster than 100.00% of Go online submissions for Find Peak Element.
    - Memory Usage: 2.8 MB, less than 67.97% of Go online submissions for Find Peak Element.

*** Code
    - Go: {@ main.go}

** Optimized Linear Search

*** Algorithm
    Noticed that a peak should be the point that a conscutive line then goes down. So we only need to check next element is a down point.

*** Complexity
    Complexity should be the same

*** Result
    - Runtime: 5 ms, faster than 45.16% of Go online submissions for Find Peak Element.
    - Memory Usage: 2.8 MB, less than 67.97% of Go online submissions for Find Peak Element.

*** Code
    - Go: {@ ./optimize.go}

