* Decode Ways

** Edge Case
   - 

** Backtracking

*** Complexity
    - Time: O(n)
    - Space: O(n)

*** Result
    - Time Limit Exceeded
    - Case: 111111111111111111111111111111111111111111111

** DP

*** Algorithm
    `DP[i]` could be two conditions:
    - `s[i] == '0'`, ways of this position is `0`
    - Other cases, at least having `dp[i+1]` ways in this position
    - Consider two digits can combine to form a number, so we have `dp[i+2]` ways in this position

    `DP[i] = (DP[i+1] or 0) + Optional(DP[i+2])`

*** Complexity
    - Time: O(n)
    - Space: O(n)

*** Result
    - Runtime: 1 ms, faster than 43.68% of Go online submissions for Decode Ways.
    - Memory Usage: 2.2 MB, less than 29.95% of Go online submissions for Decode Ways.

*** Code
    - Go: {@ main.go}

