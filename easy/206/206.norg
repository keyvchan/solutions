* Reverse Linked List

** Stack push/pop

*** Details
    Use a stack store the nodes, and pop the nodes in the reverse order.

*** Complexity
    - Time: Push to stack O(n), pop and attach is O(n)
    - Space: Use a stack O(n) and a new list O(n)

*** Result
    - Runtime: 0 ms, faster than 100.00% of Go online submissions for Reverse Linked List.
    - Memory Usage: 3.1 MB, less than 6.87% of Go online submissions for Reverse Linked List.

*** Code
    - Go: {@ main.go}[main.go]

