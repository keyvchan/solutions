* Two Sum

** Initial Thoughts(simi-brutle-force)

*** Algorithm
    Take a num, check target - num in the reset.

*** Complexity
    - Time: O(n^2)
    - Space: O(1)

*** Result
    - Runtime: 28 ms, faster than 31.31% of Go online submissions for Two Sum.
    - Memory Usage: 3.5 MB, less than 90.20% of Go online submissions for Two Sum.

*** Code
    - Go: {@ main.go}

** Hash Map

*** Algorithm
    Use hash map to store num and its index, check `target-sum` in the hash map.

*** Complexity
    - Time: O(n)
    - Space: O(n)

*** Result
    - Runtime: 5 ms, faster than 82.72% of Go online submissions for Two Sum.
    - Memory Usage: 4.2 MB, less than 52.09% of Go online submissions for Two Sum.

*** Code
    - Go: {@ main.go}
    - C++: {@ main.cpp}
