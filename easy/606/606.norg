* Construct String from Binary Tree

** DFS

*** Algorithm
    Noticed that when the left child is nullptr, and the right are not, we should insert `()`.
    Otherwise, we should insert the non-null left child first, then the non-null right child.

*** Complexity
    - Time: O(N)
    - Space: O(N)

*** Result
    - Runtime: 40 ms, faster than 45.05% of C++ online submissions for Construct String from Binary Tree.
    - Memory Usage: 23.2 MB, less than 99.49% of C++ online submissions for Construct String from Binary Tree.

*** Code
    - Go: {@ main.go}
    - Go: {@ version2.go}[String builder]
    - C++: {@ main.cpp}
