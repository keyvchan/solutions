* Find the Duplicate Number

** Edge Case:
   - All pointer start from 0

** Floyd's Cycle Detection Algorithm

*** Algorithm
    Slow pointer moves 1 step at a time
    Fast pointer moves 2 steps at a time
    If there is a cycle, slow pointer will meet fast pointer
    If there is no cycle, slow pointer will reach the end of the list
    When slow pointer and fast pointer meet, set another pointer to the head of the list, start 1 steps at the same time, when meet, it's the cycle

*** Complexity
    - Time: O(n)
    - Space: O(1)

*** Result
    - Runtime: 120 ms, faster than 52.94% of Go online submissions for Find the Duplicate Number.
    - Memory Usage: 9 MB, less than 53.87% of Go online submissions for Find the Duplicate Number.

*** Code
    - Go: {@ main.go}[main.go]



