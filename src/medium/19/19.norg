* Rename Nth Node From End of List

** Stack
*** Algorithm
    Use stack to store the nodes, and use index to get the previous node and next node
    *Note*:
    - `n == 1`, remove the last node
    - `n == len(stack)-1`, remove the first node

*** Complexity
    Time: O(n), we just need to traverse the list once
    Space: O(n), use stack store all nodes

*** Result
    - Runtime: 5 ms, faster than 15.92% of Go online submissions for Remove Nth Node From End of List.
    - Memory Usage: 2.3 MB, less than 6.21% of Go online submissions for Remove Nth Node From End of List.

*** Code
    - Go: {@ main.go}[main.go]
